<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAQBQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAAOxAAADsQBlSsOGwAABMJJREFUeJzt3cGS0kAUhlGs8hl16bO51JfUjQqjjECSTt++/zlrqybB
        4uPSaZLLBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFr6MPsAGOLH7APg
        j9LvsY+zDwCYRwAgWOnx5EnGXVZR7v1mAoBgVQPgUx1OUDUAwAkEAIIJAKf6+u3T7EM41JfP32cfwi4C
        AMEEAIKVuy75S5urAN1GXu578qtAufebCQCCCQAEqxqAV0alzV8XjOekqxoA4AQCAMHKrUrutOnrgK8C
        7OUqALAcAYBg3QJwO2K12UwEo3QLAPACAbi8XcCxIEgSAYBgAgDBOgfAgiA80DkAwAMCAMEEAIIJAAQT
        AAiWEgBXBJoZdTvutI1gKQEA7hAACCYADLP6U3MSCAAEEwAIJgADGH1ZhQBAMAGgpbTr+VsJAAQTAAgm
        AJzKaF6LAEAwAYBgAjCJUZgKBACCCQAEE4ABjPesQgAgmABAMAGAHVb/5acAQDABgGACAMEEAIIJAAQT
        AAgmABBMAMK9ch3bFudNPjz+J/MIAAQTAAgmABBMACCYAEAwAQi0+i/YOI4AQDABgGACEGLP2F95A9Az
        51X5+GcTAAgmABAsJQA/Zh/ADF3H/svFlYyjpAQAuEMAIJgANGQ8HqvT6ysAEEwAwlVf7LvV6ZO3CgGA
        YAIAwQTgstYY/J6u9/bbOvZPPsfS9wG8JQAQTAAgWOcARG7/7WDRsX9JnQMAPCAAEEwAFtZp5b/6Jp/q
        x7eVAEAwAYBg0QGoPhbzPv93x4gOAKQTAAjWLQCnb/45e9NKp5X/V3U7nwq6BQB4gQBAMAGY5IyNJd02
        r4w6n4O+WizzE+BbAgDB4gJgIQmu4gIAXAkABBOAnR59pei2EEcvAgDBBACCCcBgZ2z5PepvHu2Irz9H
        nIuvYe8TAAgmABBMAJqoMvZvNfL4V39tRhIACCYAEKxDAFo9AWj1G35YcV9LhwAAGwkABBMAdvMwz3UJ
        AASLCECnT5oq5+JTv4eIAAD3CQAEWzkA067/z7zW/czfHjVmp13jTzjflQMA7CQAEEwAGqo8us4+Nlch
        3hIACCYAEKxtAIx68FjbAACPCQAEE4ANzr5V9e3fm72Kzj+WfCz4bwIAwQQAggnAiY6439/Iqxt+4ptH
        ACCYAEAwAQjnqkI2AYBgAjDYq5+wZyyoVXlsN/MJAAQTAAi2WgBaPQdwNcb+flYLAHAgAYBgAhDC9X7u
        EQAIJgAQTAAGqLj5Z4/qx8d2AgDBBACCrXY/s/9uBJo5qo5cZd96XnuOKXXs3/CarfYeesMEAMEEAIIJ
        QEPu7cezBACCrRAAvwAcyKf+Jksv/N1aIQDAIAIAwQSgAGP4XMm/lBQACCYAEGyF1cyy23/pIW377y0T
        AAQTAAgmAJRW6ClGbcb+WwIAwQQAgsUFIHnTB/wtLgDAlQBAMAGAYAIAwQSApdkKvo8AQDABgGBxATAy
        wlVcAIArAYBgAgDBBACCCQAEE4CF+WUjewkABBMACLbCfc48HJQKVnivvMwEAMEEAIIJAAQTAAgmABBM
        AHpquWLN8QQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO8RNeKM0XIbhvVQAAAABJRU5ErkJggg==
</value>
  </data>
</root>